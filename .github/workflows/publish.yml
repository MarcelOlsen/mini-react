name: 🚀 Publish to NPM

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# Add permissions for the workflow
permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  test:
    name: 🧪 Test & Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📦 Install dependencies
        run: bun install

      - name: 🧪 Run tests
        run: bun test

      - name: 🔍 Run linting and formatting checks
        run: bun run check

      - name: 🏗️ Test build
        run: bun run build

      - name: 📊 Upload coverage reports
        if: success()
        run: echo "✅ All quality checks passed"

  release:
    name: 🚀 Release with Changesets
    needs: test
    runs-on: ubuntu-latest
    # Only run on pushes to master
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Use PAT for creating PRs if available, fallback to GITHUB_TOKEN
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}

      - name: 🟢 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📦 Install dependencies
        run: bun install

      - name: 🏗️ Build package
        run: bun run build

      - name: 🔄 Create Release Pull Request or Publish to NPM
        id: changesets
        uses: changesets/action@v1
        with:
          publish: bunx changeset publish
          version: bunx changeset version && bun run check:write
          commit: "chore: release package"
          title: "chore: release package"
        env:
          # Use PAT for creating PRs if available, fallback to GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
